import { get_current_component, onDestroy } from "svelte/internal";
import { get } from "svelte/store";
import { is_client } from "svelte/internal";
export function tryOnDestroy(fn) {
    try {
        get_current_component();
        onDestroy(fn);
    }
    catch {
        // fail silently
    }
}
export function noop() {
    // noop
}
export function writableToReadable({ subscribe }) {
    return { subscribe: subscribe };
}
export function isReadable(ref) {
    if (ref === null)
        return false;
    if (typeof ref === "object") {
        return "subscribe" in ref;
    }
    return false;
}
export function unwrapReadable(ref) {
    if (isReadable(ref)) {
        return get(ref);
    }
    return ref;
}
export function isSafeIntegerThrowable(int) {
    if (!Number.isSafeInteger(int)) {
        throw new Error("Interval is not a safe integer");
    }
}
export const isClient = is_client;
export const defaultWindow = is_client ? window : undefined;
export const defaultDocument = is_client ? window.document : undefined;

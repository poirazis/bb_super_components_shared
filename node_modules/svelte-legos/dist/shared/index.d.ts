import { type Readable, type Writable } from "svelte/store";
export declare function tryOnDestroy(fn: () => void): void;
export declare function noop(): void;
export declare function writableToReadable<T>({ subscribe }: Writable<T>): Readable<T>;
export declare function isReadable<T>(ref: T | Readable<T>): boolean;
export declare function unwrapReadable<T>(ref: T | Readable<T>): T;
export declare function isSafeIntegerThrowable(int: unknown): void;
export declare const isClient: any;
export declare const defaultWindow: (Window & typeof globalThis) | undefined;
export declare const defaultDocument: Document | undefined;

import Loader from "./Loader";
export function loadingAction(node, params) {
    let stop;
    const destroy = () => {
        stop && stop();
    };
    let loader;
    let restoreNode = () => { };
    const update = (params) => {
        if (!params) {
            if (loader) {
                loader.unmount();
                restoreNode();
            }
            return;
        }
        const position = node.style.getPropertyValue("position");
        const overflow = node.style.getPropertyValue("overflow");
        const pointerEvents = node.style.getPropertyValue("pointer-events");
        restoreNode = () => {
            node.style.setProperty("position", position);
            node.style.setProperty("overflow", overflow);
            node.style.setProperty("pointer-events", pointerEvents);
        };
        destroy();
        function prepareNode() {
            node.style.setProperty("position", "relative");
            node.style.setProperty("overflow", "hidden");
            node.style.setProperty("pointer-events", "none");
        }
        prepareNode();
        loader = new Loader();
        loader.mount(node);
    };
    update(params);
    return {
        update,
        destroy,
    };
}

import { isUndefined } from "../../shared/utils/utils";
import { eventListenerStore } from "../../stores/eventListenerStore";
const Keys = ["alt", "code", "ctrl", "meta", "shift"];
const KeysToEventMap = {
    alt: "altKey",
    meta: "metaKey",
    ctrl: "ctrlKey",
    shift: "shiftKey",
    code: "code",
};
export function hotKeyAction(node, params) {
    let stop;
    const destroy = () => {
        stop && stop();
    };
    const update = (params) => {
        destroy();
        function handler(event) {
            const definedKeys = Keys.filter((key) => !isUndefined(params[key]));
            const undefinedKeys = Keys.filter((key) => isUndefined(params[key]));
            function check(key) {
                return (params[key] ===
                    event[KeysToEventMap[key]]);
            }
            if (definedKeys.every(check) &&
                !undefinedKeys.some((key) => !!event[KeysToEventMap[key]])) {
                event.preventDefault();
                params.cb ? params.cb() : node.click();
            }
        }
        ({ stop } = eventListenerStore("keydown", handler));
    };
    update(params);
    return {
        update,
        destroy,
    };
}
